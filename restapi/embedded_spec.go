// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for test server",
    "title": "Template for http server",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "paths": {
    "/agent": {
      "post": {
        "tags": [
          "regAgent"
        ],
        "summary": "Register new agent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request.Agent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK No Content"
          }
        }
      }
    },
    "/executeTask/{agent}": {
      "get": {
        "tags": [
          "execTask"
        ],
        "summary": "Get task for executiton",
        "parameters": [
          {
            "type": "string",
            "name": "agent",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Request.Task"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/setResult/{id}": {
      "post": {
        "tags": [
          "setResult"
        ],
        "summary": "Set result",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Response.Task"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK No Content"
          }
        }
      }
    },
    "/task": {
      "post": {
        "tags": [
          "createTask"
        ],
        "summary": "Create new task",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request.Task"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK No Content"
          }
        }
      }
    },
    "/task/{task_id}": {
      "get": {
        "tags": [
          "getTask"
        ],
        "summary": "Get task info",
        "parameters": [
          {
            "type": "string",
            "name": "task_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response.Task"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "summary": "Get version of server",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response.Version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Request.Agent": {
      "type": "object",
      "title": "Agent info",
      "properties": {
        "id": {
          "type": "string",
          "example": "ag-test-vm1"
        },
        "nets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Request.Task": {
      "type": "object",
      "title": "Task info",
      "properties": {
        "agent": {
          "type": "string",
          "example": "ag-test-vm1"
        },
        "command": {
          "type": "string",
          "example": "connection"
        },
        "id": {
          "type": "string",
          "example": "6c8d084825ef4281094bd1bf26003e9a057c3306"
        },
        "target": {
          "type": "string",
          "example": "ya.ru"
        }
      }
    },
    "Response.Error": {
      "type": "object",
      "title": "Error response",
      "properties": {
        "code": {
          "type": "integer",
          "format": "uint32",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "some error"
        }
      }
    },
    "Response.Task": {
      "type": "object",
      "title": "Task Response",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "example": "ok"
        }
      }
    },
    "Response.Version": {
      "type": "object",
      "title": "Version response",
      "properties": {
        "branch": {
          "type": "string",
          "example": "main"
        },
        "build_time": {
          "type": "string",
          "example": "2021-03-06_22:22:44_MSK"
        },
        "commit": {
          "type": "string",
          "example": "6c8d084825ef4281094bd1bf26003e9a057c3305"
        },
        "version": {
          "type": "string",
          "example": "v1.0.0"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for test server",
    "title": "Template for http server",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "paths": {
    "/agent": {
      "post": {
        "tags": [
          "regAgent"
        ],
        "summary": "Register new agent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request.Agent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK No Content"
          }
        }
      }
    },
    "/executeTask/{agent}": {
      "get": {
        "tags": [
          "execTask"
        ],
        "summary": "Get task for executiton",
        "parameters": [
          {
            "type": "string",
            "name": "agent",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Request.Task"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/setResult/{id}": {
      "post": {
        "tags": [
          "setResult"
        ],
        "summary": "Set result",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Response.Task"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK No Content"
          }
        }
      }
    },
    "/task": {
      "post": {
        "tags": [
          "createTask"
        ],
        "summary": "Create new task",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request.Task"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK No Content"
          }
        }
      }
    },
    "/task/{task_id}": {
      "get": {
        "tags": [
          "getTask"
        ],
        "summary": "Get task info",
        "parameters": [
          {
            "type": "string",
            "name": "task_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response.Task"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Response.Error"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "summary": "Get version of server",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response.Version"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Request.Agent": {
      "type": "object",
      "title": "Agent info",
      "properties": {
        "id": {
          "type": "string",
          "example": "ag-test-vm1"
        },
        "nets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Request.Task": {
      "type": "object",
      "title": "Task info",
      "properties": {
        "agent": {
          "type": "string",
          "example": "ag-test-vm1"
        },
        "command": {
          "type": "string",
          "example": "connection"
        },
        "id": {
          "type": "string",
          "example": "6c8d084825ef4281094bd1bf26003e9a057c3306"
        },
        "target": {
          "type": "string",
          "example": "ya.ru"
        }
      }
    },
    "Response.Error": {
      "type": "object",
      "title": "Error response",
      "properties": {
        "code": {
          "type": "integer",
          "format": "uint32",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "some error"
        }
      }
    },
    "Response.Task": {
      "type": "object",
      "title": "Task Response",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "example": "ok"
        }
      }
    },
    "Response.Version": {
      "type": "object",
      "title": "Version response",
      "properties": {
        "branch": {
          "type": "string",
          "example": "main"
        },
        "build_time": {
          "type": "string",
          "example": "2021-03-06_22:22:44_MSK"
        },
        "commit": {
          "type": "string",
          "example": "6c8d084825ef4281094bd1bf26003e9a057c3305"
        },
        "version": {
          "type": "string",
          "example": "v1.0.0"
        }
      }
    }
  }
}`))
}
