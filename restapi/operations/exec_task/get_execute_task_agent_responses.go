// Code generated by go-swagger; DO NOT EDIT.

package exec_task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/AlexandrGurkin/tasker/models"
)

// GetExecuteTaskAgentOKCode is the HTTP code returned for type GetExecuteTaskAgentOK
const GetExecuteTaskAgentOKCode int = 200

/*GetExecuteTaskAgentOK OK

swagger:response getExecuteTaskAgentOK
*/
type GetExecuteTaskAgentOK struct {

	/*
	  In: Body
	*/
	Payload *models.RequestTask `json:"body,omitempty"`
}

// NewGetExecuteTaskAgentOK creates GetExecuteTaskAgentOK with default headers values
func NewGetExecuteTaskAgentOK() *GetExecuteTaskAgentOK {

	return &GetExecuteTaskAgentOK{}
}

// WithPayload adds the payload to the get execute task agent o k response
func (o *GetExecuteTaskAgentOK) WithPayload(payload *models.RequestTask) *GetExecuteTaskAgentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get execute task agent o k response
func (o *GetExecuteTaskAgentOK) SetPayload(payload *models.RequestTask) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExecuteTaskAgentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetExecuteTaskAgentBadRequestCode is the HTTP code returned for type GetExecuteTaskAgentBadRequest
const GetExecuteTaskAgentBadRequestCode int = 400

/*GetExecuteTaskAgentBadRequest Bad Request

swagger:response getExecuteTaskAgentBadRequest
*/
type GetExecuteTaskAgentBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewGetExecuteTaskAgentBadRequest creates GetExecuteTaskAgentBadRequest with default headers values
func NewGetExecuteTaskAgentBadRequest() *GetExecuteTaskAgentBadRequest {

	return &GetExecuteTaskAgentBadRequest{}
}

// WithPayload adds the payload to the get execute task agent bad request response
func (o *GetExecuteTaskAgentBadRequest) WithPayload(payload *models.ResponseError) *GetExecuteTaskAgentBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get execute task agent bad request response
func (o *GetExecuteTaskAgentBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExecuteTaskAgentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
